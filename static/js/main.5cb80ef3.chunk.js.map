{"version":3,"sources":["container.module.css","components/Filter/filter.module.css","redux/phonebook-actions.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","components/Form/form.module.css","components/Contacts/contacts.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","option","useState","setName","setNumber","dispatch","useDispatch","inputId","handleChange","evt","currentTarget","value","onSubmit","preventDefault","contactActions","autoComplete","className","styles","phoneBookForm","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","Contacts","list","useSelector","contacts","items","filter","filteredContacts","map","listItem","contactName","contactBtn","onClick","normalizedFilter","toLowerCase","includes","Filter","state","filterLabel","filterInput","e","App","container","contactList","createReducer","_","combineReducers","contactsPersistConfig","key","version","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","storeNpersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5cb80ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3gKmY\",\"contactList\":\"container_contactList__2LHSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1hYoT\",\"filterInput\":\"filter_filterInput__KcP-x\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n    payload: {\n        id: uuidv4(),\n        name,\n        number,\n    },\n}));\n\nconst deleteContact = createAction('contacts/delete')\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport contactActions from '../../redux/phonebook-actions';\nimport styles from './form.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function Form({ option }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n\n    const inputId = uuidv4();\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        dispatch(contactActions.addContact({ name, number }));\n\n        setName('');\n        setNumber('');      \n    }\n\n    const handleChange = evt => {\n        const { name, value } = evt.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    return (\n        <>\n        <h1>{option}</h1>\n        \n        <form onSubmit={handleSubmit}  autoComplete=\"off\" className={styles.phoneBookForm}>\n            <label htmlFor={inputId} className={styles.formLabel}>Name</label>\n                <input\n                    className={styles.formInput}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter full name\"\n                    id={inputId}\n                    value={name}\n                    onChange={handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                />\n            <label htmlFor={inputId} className={styles.formLabel}>Number</label>\n                <input\n                    className={styles.formInput}\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"Enter number\"\n                    id={inputId}\n                    value={number}\n                    onChange={handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                />\n            \n          <button type=\"submit\" className={styles.formBtn}>Add contact</button>          \n        </form>\n        </>\n    );    \n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport actions from '../../redux/phonebook-actions';\nimport styles from './contacts.module.css'\n\nexport default function Contacts() {\n    const list = useSelector(({ contacts: { items, filter } }) => filteredContacts(items, filter))\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <ul className={styles.list}>\n                {list.map(({ number, name }) => (\n                    <li key={number} className={styles.listItem}>\n                        <p className={styles.contactName}>{name}: {number}</p>\n                        <button\n                            className={styles.contactBtn}\n                            onClick={() => dispatch(actions.deleteContact(number))}\n                        >Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n};\n\nconst filteredContacts = (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    \n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter));    \n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/phonebook-actions';\nimport styles from './filter.module.css'\n\nexport default function Filter() {\n    const value = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    return (\n        <label htmlFor=\"filter\" className={styles.filterLabel}>Find contacts by name\n            <input\n                className={styles.filterInput}\n                type=\"text\"\n                value={value}\n                onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\n                id=\"filter\"\n            />\n        </label>\n    )\n};","import styles from './container.module.css'\n\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className={styles.container}>\n      <Form option=\"Phonebook\"/>\n    \n      <h2 className={styles.contactList}>Contacts</h2>\n    \n      <Filter/>    \n      <Contacts/>\n    </div>\n  );\n}","import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n\nconst INITIAL_STATE = [\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n];\n\nconst items = createReducer(INITIAL_STATE, {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n        state.filter(({number}) => number !== payload),\n})\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter\n})","import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './phonebook-reducer';\n\nconst middlware = (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}).concat(logger);\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    version: 1,\n    storage,\n    blacklist: ['filter'],\n};\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer)\n    },\n    middlware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nlet persistor = persistStore(store);\n\nconst storeNpersistor = { store, persistor };\nexport default storeNpersistor;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>             \n    </Provider>          \n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"form_phoneBookForm__2zgVQ\",\"formLabel\":\"form_formLabel__1_eLj\",\"formInput\":\"form_formInput__3uoAJ\",\"formBtn\":\"form_formBtn__3NqgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__3wcae\",\"listItem\":\"contacts_listItem__2mucc\",\"contactName\":\"contacts_contactName__3H0Ot\",\"contactBtn\":\"contacts_contactBtn__Lf-9-\"};"],"sourceRoot":""}